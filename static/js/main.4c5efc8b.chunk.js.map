{"version":3,"sources":["TableComponent.tsx","App.tsx","index.tsx"],"names":["TableComponent","state","data","page","inputValue","sortByLength","sorted","textOrBackground","backgroundColor","textColor","this","document","body","style","tableCells","slice","map","e","index","Table","Row","Cell","color","display","flexDirection","justifyContent","Input","action","Button","basic","onClick","push","setState","onChange","target","value","Popup","trigger","Radio","slider","paddingTop","paddingLeft","content","on","marginRight","margin","width","hex","sortable","celled","fixed","Header","HeaderCell","sortedData","sort","a","b","length","localeCompare","Body","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","totalPages","onPageChange","activePage","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c5efc8b.chunk.js","sourcesContent":["import * as React from 'react'\nimport { Component } from 'react'\nimport { Button, Input, Pagination, Popup, Radio, Table } from 'semantic-ui-react'\nimport { HuePicker } from 'react-color';\n\n\nclass TableComponent extends Component {\n  state = {\n    data: [\"First task, for example\", \"And second task\"] as any,\n    page: 1,\n    inputValue: \"\",\n    sortByLength: true,\n    sorted: false,\n    textOrBackground: false,\n    backgroundColor: \"#ffffff\",\n    textColor: \"black\"\n  }\n  render() {\n    const { inputValue, data, sortByLength, sorted, page, backgroundColor, textOrBackground, textColor } = this.state\n    document.body.style.backgroundColor = backgroundColor\n    const itemsPerPage = 50\n    const tableCells = data.slice((page - 1) * itemsPerPage, page * itemsPerPage).map((e: any, index: any) => (\n      <Table.Row key={index}>\n        <Table.Cell style={{color: textColor}}>{e}</Table.Cell>\n      </Table.Row>\n    ))\n    return (\n      <>\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n          <div>\n            <Input\n              action={\n                <Button\n                  basic\n                  onClick={() => {\n                    data.push(inputValue)\n                    this.setState({ data: data })\n                  }}\n                >Add</Button>\n              }\n              onChange={(e) => { this.setState({ inputValue: e.target.value }) }}\n            />\n            <Popup\n              trigger={\n                <Radio\n                  slider\n                  style={{ paddingTop: \"5px\", paddingLeft: \"10px\" }}\n                  onChange={() => this.setState({ sortByLength: !sortByLength })}\n                />\n              }\n              content='Sort by length or alphabet'\n              on='hover'\n            />\n          </div>\n          <div style={{display: \"flex\", flexDirection: \"row\"}}>\n            <Popup\n              trigger={\n                <Radio\n                  slider\n                  style={{ paddingTop: \"10px\", marginRight: \"10px\" }}\n                  onChange={() => this.setState({ textOrBackground: !textOrBackground })}\n                />\n              }\n              content='Change background or text color'\n              on='hover'\n            />\n            <div style={{margin: \"10px\"}}>\n            <HuePicker \n            width={\"200px\"}\n            color={textOrBackground?backgroundColor:textColor} \n            onChange={(value) => {\n              textOrBackground?this.setState({ backgroundColor: value.hex }):this.setState({textColor: value.hex})\n\n            }} />\n            </div>\n          </div>\n        </div>\n        <Table sortable celled fixed>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell\n                onClick={() => {\n                  const sortedData = data.sort(function (a: any, b: any) {\n                    if (sortByLength) {\n                      return sorted ? b.length - a.length : a.length - b.length\n                    } else {\n                      return sorted ? b.localeCompare(a) : a.localeCompare(b)\n                    }\n                  })\n                  this.setState({ sorted: !sorted })\n                  this.setState({ data: sortedData })\n                }}\n              >\n                Name\n          </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {tableCells}\n          </Table.Body>\n        </Table>\n        <Pagination\n          defaultActivePage={1}\n          firstItem={null}\n          lastItem={null}\n          pointing\n          secondary\n          totalPages={data.length / 50}\n          onPageChange={(e, value) => this.setState({ page: value.activePage })}\n        />\n      </>\n    )\n  }\n}\n\nexport default TableComponent","import React from 'react';\nimport TableComponent from './TableComponent';\n\nfunction App() {\n  return (\n    <>\n      <TableComponent />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}